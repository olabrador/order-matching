// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model Order {
  id           Int      @id @default(autoincrement())
  orderId      String
  type         String
  customerName String
  date         String
  product      String
  price        Float
  createdAt    DateTime @default(now())

  matches Match[]
}

model Transaction {
  id                Int      @id @default(autoincrement())
  type              String
  customerName      String
  orderId           String
  date              String
  product           String
  price             Float
  transactionType   String
  transactionDate   String
  transactionAmount Float
  createdAt         DateTime @default(now())

  matches Match[]
}

model Match {
  id                     Int      @id @default(autoincrement())
  orderId                Int
  transactionId          Int
  status                 String
  customerNameSimilarity Float?
  orderIdSimilarity      Float?
  productSimilarity      Float?
  feedback               String?
  createdAt              DateTime @default(now())

  order       Order       @relation(fields: [orderId], references: [id], onDelete: Cascade)
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
}

model Threshold {
  id    Int    @id @default(autoincrement())
  name  String
  value Float
}
